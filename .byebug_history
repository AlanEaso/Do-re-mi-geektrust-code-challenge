c
plan_detail = plan_details(category: category, plan: plan)
plan
category
c
@start_date.next_month(4) - 10
@start_date.next_month(4).10
@start_date.next_month(4)
@start_date
start_date
@start_date.next_month(4)
@start_date.next_month(1)
@start_date.prev_month(1)
@start_date - 28
@start_date - 1.month
@start_date - 1.days
@start_date - 1.day
@start_date
c
details
c
@subscription_details
c
@subscription_details
c
@subscription_details
c
n.nil?
n = {}
c
@start_date + 1.month
@start_date + 1
@start_date
c
DateTime.strptime(start_date, '%d-%m-%Y')
DateTime.strptime(start_date, '%d-%m-%y')
start_date
c
@total
c
@total
c
YAML.load_file('./do_re_mi_plans.yml')[category.downcase][plan.downcase]
YAML.load_file('./do_re_mi_plans.yml')[category.downcase][plan]
YAML.load_file('./do_re_mi_plans.yml')[category.downcase]
category
c
category.downcase
YAML.load_file('./do_re_mi_plans.yml')[category.downcase]
category
c
@total
@renewal_details
c
@renewal_details
c
@total
@renewal_details
c
@total
@renewal_details
c
@total
@renewal_details
c
@total
@renewal_details
c
@renewal_details[category]['date']
@renewal_details
@renewal_details[category] = {'date' => @start_date}
category
@renewal_details[category]
c
@renewal_details[category]= [{ 'date' : Time,zone.now }]
@renewal_details[category]= { 'date' : Time,zone.now }
@renewal_details[category] => { 'date' : Time,zone.now }
@renewal_details[category] = { 'date' : Time,zone.now }
@renewal_details
@renewal_details[category]
@renewal_details[category]['date'] = 1
@renewal_details[category][date] = 1
@renewal_details
@renewal_details[category] = 1
@renewal_details[category]
@renewal_details
c
@start_date + 1.months
@start_date
c
valid_date?(@start_date.to_s)
@start_date
c
@start_date.to_s
@start_date
c
@start_date
c
@start_date + 1.month
@start_date
1.month
c
1.month
c
1.month
plan_detail['duration'].month
plan_detail['duration']
c
plan_detail['duration']
plan_detail['price']
plan_detail
c
plan_detail
category
c
plan_detail
c
plan_detail
c
plan_detail
c
YAML.load_file('./do_re_mi_plans.yml')[category.downcase][plan.downcase]
YAML.load_file('./do_re_mi_plans.yml')[category.downcase]
YAML.load_file('./do_re_mi_plans.yml')[category]
YAML.load_file('./do_re_mi_plans.yml')
YAML.load_file('./do_re_mi_plans.yml')[plan.to_s]
category
plan
c
result
c
result
c
flag
c
flag
c
flag
c
flag
c
cc
c
category
c
category
c
category
ctegory
c
valid_date?
c
valid_date?
validate_date?
c
plan
category
object
c
SubscriptionDetails.persisted?
SubscriptionDetails.new
SubscriptionDetails.last
SubscriptionDetails
c
valid_date?(start_date)
start_date
c
plans['music'].symbolize_keys
plans['music'].keys
plans['music']
plans['music'].
plans['music'].map(&:symbolize_keys)
plans['music'].map(&:symbolie_keys)
plans['music'].keys
plans['music']
plans[:music]
plans.keys.map(&:to_sym)
plans.keys.map(&:symbolize_key)
plans.keys.map(&:symbolize_keys)
plans.keys.map(&:symbolize)
plans.keys.symbolize
plans.keys
plans.map(&:symbolize)
plans
c
YAML.load_file('./do_re_mi_plans.yml')
YAML.load_file('./do_re_mi_plans.yml').symbolize
c
plans
c
YAML.load_file('./do_re_mi_plans.yml').symbolize
YAML.load_file('./do_re_mi_plans.yml').symbolize_keys
YAML.load_file('./do_re_mi_plans.yml').symbolize
YAML.load_file('./do_re_mi_plans.yml').map(&:symbolize)
YAML.load_file('./do_re_mi_plans.yml').map(&:symbolize_keys)
YAML.load_file('./do_re_mi_plans.yml').symbolize_keys
YAML.load_file('./do_re_mi_plans.yml').symbolize
YAML.load_file('./do_re_mi_plans.yml')
c
File.read(input_file).split("\n")
File.read(input_file).split('\n')
File.read(input_file)
input_file
@_input_file
c
@_input_file
c
@_input_file
c
@_input_file
c
@_input_file
input_file
c
::StreamingApp.new
::StreamingApp
StreamingApp
